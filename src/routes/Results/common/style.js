import { makeStyles } from '@material-ui/core'

const useStyles = makeStyles((theme) => ({
  root: {
    textAlign: 'center',
    '& .action-btn': {
      cursor: 'pointer',
    },
    '& h3': {
      lineHeight: '38px',
      fontWeight: 500,
      marginBottom: 30,
    },
    '& .btn-consize': {
      fontSize: 18,
      lineHeight: '22px',
      padding: '12px 20px 12px 30px',
      fontWeight: 600,
      '& .info-box': {
        left: -10,
        top: 0,
        position: 'relative',
        '& .helper-icon': {
          fontSize: 18,
        },
      },
      '& .MuiButton-endIcon .MuiSvgIcon-root': {
        fontSize: 25,
      },
    },
    '& .view-btn': {
      padding: '16px 25px',
      fontSize: 24,
      lineHeight: '30px',
      backgroundColor: '#050C4D',
      marginTop: 0,
      fontWeight: 600,
    },
  },
  marginTopAppBar: {
    marginTop: '5rem',
  },
  pageTitle: {
    color: '#fff',
    fontFamily: "'made_tommyregular',sans-serif",
    textTransform: 'uppercase',
    fontSize: '64px',
    lineHeight: '60px',
    fontWeight: 600,
    marginBottom: 5,
    letterSpacing: 1,
    position: 'relative',
    display: 'inline-block',
    '&::before,&::after': {
      content: '""',
      width: '27px',
      height: '3px',
      borderTop: '2px solid #fff',
      position: 'absolute',
      top: 'calc(50% - 1px)',
    },
    '&::before': {
      left: -35,
    },
    '&::after': {
      right: -35,
    },
    [theme.breakpoints.down('sm')]: {
      fontSize: 24,
    },
  },
  mutedText: {
    fontSize: 24,
    lineHeight: '30px',
    fontFamily: "'made_tommyregular', sans-serif",
    fontWeight: 400,
    marginBottom: 14,
    color: '#979797',
  },
  dropdownMenu: {
    marginRight: '-15px',
  },
  optionTitle: {
    fontSize: 36,
    lineHeight: '45px',
    fontFamily: "'made_tommyregular', sans-serif",
    fontWeight: 400,
    marginTop: 40,
    marginBottom: 10,
    color: '#0A3D80',
  },
  optionQuestion: {
    fontSize: 27,
    lineHeight: '34px',
    fontFamily: "'made_tommyregular', sans-serif",
    maxWidth: 500,
    margin: '0 auto 33px auto',
    color: '#050C4D',
  },
  primaryQuestion: {
    fontSize: 33,
    lineHeight: '41px',
    fontFamily: "'made_tommyregular', sans-serif",
    color: '#050C4D',
    marginBottom: 60,
    [theme.breakpoints.down('sm')]: {
      fontSize: 22,
    },
  },
  boxRoot: {
    padding: 30,
    borderRadius: 10,
  },
  listBoxRoot: {
    padding: 0,
    borderRadius: 10,
  },
  chartTitle: {
    fontSize: 24,
    lineHeight: '31px',
    fontFamily: "'made_tommyregular', sans-serif",
    color: '#000000',
    display: 'block',
    textAlign: 'center',
    paddingLeft: 5,
    marginBottom: 10,
  },
  statusBox: {
    maxWidth: '80%',
    margin: '0 auto 15px',
    [theme.breakpoints.down('lg')]: {
      maxWidth: 'calc(100% - 30px)',
    },
    [theme.breakpoints.down('md')]: {
      maxWidth: '100%',
    },
    [theme.breakpoints.down('sm')]: {
      width: 'calc(100% + 24px)',
      maxWidth: 'calc(100% + 24px)',
      margin: '-12px',
    },
  },
  statusBoxAppBar: {
    // maxWidth: '100%',
    margin: 'auto',
    justifyContent: 'center',
  },
  statusHead: {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    '& h3': {
      marginBottom: 0,
      marginLeft: 10,
    },
    '& .helper-icon': {
      marginTop: -15,
      fontSize: 23,
      color: '#050C4D',
    },
  },
  headerCard: {
    display: 'inline-flex',
    flexDirection: 'column',
    justifyContent: 'center',
    width: '100%',
    alignItems: 'center',
    paddingLeft: '105px',
    paddingRight: '105px',
    paddingTop: '25px',
    paddingBottom: '25px',
    marginLeft: 'auto',
    color: '#fff',
    textTransform: 'uppercase',
    position: 'relative',
    backgroundColor: theme.palette.primary.dark,
    '& p': {
      letterSpacing: '1px',
    },
    [theme.breakpoints.down('sm')]: {
      margin: '0 auto',
      width: '100%',
    },
  },
  iconBox: {
    display: 'flex',
    width: '49px',
    height: '49px',
    top: '6px',
    left: '12px',
    objectFit: 'contain',
    position: 'absolute',
    fontFamily: "'made_tommybold',sans-serif",
    justifyContent: 'center',
  },
  pageSubTitle: {
    fontSize: '25px',
    fontStyle: 'normal',
    fontWeight: 400,
    letterSpacing: '0em',
    textAlign: 'center',
    fontFamily: "'made_tommymedium',sans-serif",
    [theme.breakpoints.down('sm')]: {
      fontSize: 15,
    },
  },
  headerCardRight: {
    width: '100%',
    height: '100%',
    display: 'inline-flex',
    padding: '15px',
    position: 'relative',
    alignItems: 'center',
    flexDirection: 'row',
    flexWrap: 'wrap',
    textTransform: 'uppercase',
    backgroundColor: '#FFF',
    color: '#fff',
    [theme.breakpoints.down('sm')]: {
      height: 'auto',
      width: '100%',
    },
  },
  headerCardRightWrapper: {
    display: 'flex',
    alignItems: 'center',
    width: '100%',
  },
  headerCardItem: {
    display: 'flex',
    width: '100%',
    height: '60px',
    background: 'linear-gradient(269.74deg, #0A3C81 -2.5%, #1E55A0 99.82%)',
    borderRadius: '10px',
    padding: '10px',
  },
  headerCardItemWrapper: {
    padding: '5px 5px',
    width: '50%',
    [theme.breakpoints.down('sm')]: {
      width: '100%',
    },
  },
  headerRightWrapperTitle: {
    fontFamily: "'made_tommymedium',sans-serif",
    fontSize: '21px',
    lineHeight: '26px',
    fontStyle: 'normal',
    fontWeight: 500,
    letterSpacing: '0em',
    textAlign: 'left',
    color: 'rgba(255, 255, 255, 1)',
  },
  headerRightWrapperSubTitle: {
    fontFamily: "'made_tommyregular',sans-serif",
    fontSize: '12px',
    fontStyle: 'normal',
    fontWeight: 400,
    letterSpacing: '0em',
    textAlign: 'left',
    lineHeight: '15px',
    color: 'rgba(255, 255, 255, 1)',
    textTransform: 'capitalize',
  },
  refreshButton: {
    width: '114px',
    height: '35px',
    backgroundColor: 'rgba(10, 61, 128, 1)',
    borderRadius: '6px',
    fontSize: '14px',
    fontWeight: 400,
    color: '#fff',
    fontFamily: "'made_tommymedium',sans-serif",
    marginTop: '15px',
    '&:hover': {
      backgroundColor: 'rgba(10, 61, 128, 1)',
    },
  },
}))

export { useStyles }
